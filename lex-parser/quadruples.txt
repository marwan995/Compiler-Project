func_label  	add         	_           	_           
pop_param   	b           	_           	_           
pop_param   	a           	_           	_           
assign      	1           	_           	a           
add         	a           	b           	0t0         
assign      	0t0         	_           	a           
add         	a           	b           	0t1         
return      	_           	_           	0t1         
func_label  	function    	_           	_           
return      	_           	_           	_           
func_label  	main        	_           	_           
assign      	0           	_           	i           
assign      	5           	_           	j           
assign      	true        	_           	flag        
assign      	'X'         	_           	ch          
assign      	2.500000    	_           	f           
assign      	"foo"       	_           	s           
assign      	"bar"       	_           	t           
assign      	3           	_           	i           
add         	i           	j           	0t2         
assign      	0t2         	_           	i           
assign      	0           	_           	k           
label       	_           	_           	LABEL1      
lt          	k           	3           	0t3         
if_false    	0t3         	_           	FALSE_LABEL2
assign      	k           	_           	0t4         
add         	k           	1           	k           
add         	i           	k           	0t5         
assign      	0t5         	_           	i           
label       	_           	_           	LABEL3      
lt          	i           	10          	0t6         
if_false    	0t6         	_           	FALSE_LABEL4
bit_and     	i           	1           	0t7         
eq          	0t7         	0           	0t8         
assign      	0t8         	_           	flag        
if_false    	flag        	_           	FALSE_LABEL5
jmp         	_           	_           	LABEL5      
label       	_           	_           	FALSE_LABEL5
assign      	k           	_           	0t9         
add         	k           	1           	k           
label       	_           	_           	LABEL5      
add         	i           	1           	i           
ge          	i           	7           	0t11        
if_false    	0t11        	_           	FALSE_LABEL6
jmp         	_           	_           	FALSE_LABEL4
jmp         	_           	_           	LABEL6      
label       	_           	_           	FALSE_LABEL6
label       	_           	_           	LABEL6      
jmp         	_           	_           	LABEL3      
label       	_           	_           	FALSE_LABEL4
label       	_           	_           	LABEL7      
assign      	i           	_           	0t12        
sub         	i           	1           	i           
eq          	i           	4           	0t13        
if_false    	0t13        	_           	FALSE_LABEL8
jmp         	_           	_           	LABEL7      
jmp         	_           	_           	LABEL8      
label       	_           	_           	FALSE_LABEL8
label       	_           	_           	LABEL8      
eq          	i           	0           	0t14        
if_false    	0t14        	_           	FALSE_LABEL9
jmp         	_           	_           	LABEL7      
label       	_           	_           	FALSE_LABEL9
jmp         	_           	_           	LABEL1      
label       	_           	_           	FALSE_LABEL2
eq          	i           	0           	0t15        
jf          	0t15        	_           	Label12     
label       	_           	_           	Label11     
jmp         	_           	_           	Label13     
label       	_           	_           	Label12     
eq          	i           	1           	0t16        
jf          	0t16        	_           	Label14     
label       	_           	_           	Label13     
jmp         	_           	_           	LABEL10     
jmp         	_           	_           	Label15     
label       	_           	_           	Label14     
eq          	i           	2           	0t17        
jf          	0t17        	_           	Label16     
label       	_           	_           	Label15     
jmp         	_           	_           	LABEL10     
jmp         	_           	_           	Label17     
label       	_           	_           	Label16     
assign      	i           	_           	0t18        
add         	i           	1           	i           
label       	_           	_           	Label17     
label       	_           	_           	Label10     
add         	i           	2           	0t19        
assign      	0t19        	_           	i           
sub         	i           	1           	0t20        
assign      	0t20        	_           	i           
mul         	i           	3           	0t21        
assign      	0t21        	_           	i           
div         	i           	2           	0t22        
assign      	0t22        	_           	i           
mod         	i           	5           	0t23        
assign      	0t23        	_           	i           
bit_and     	i           	1           	0t24        
assign      	0t24        	_           	i           
bit_or      	i           	2           	0t25        
assign      	0t25        	_           	i           
xor         	i           	3           	0t26        
assign      	0t26        	_           	i           
shl         	i           	1           	0t27        
assign      	0t27        	_           	i           
shr         	i           	1           	0t28        
assign      	0t28        	_           	i           
bit_not     	i           	_           	0t29        
assign      	0t29        	_           	i           
assign      	ch          	_           	0t30        
add         	ch          	1           	ch          
sub         	ch          	1           	ch          
sub         	f           	0.500000    	0t32        
assign      	0t32        	_           	f           
mul         	f           	2.000000    	0t33        
assign      	0t33        	_           	f           
div         	f           	2.000000    	0t34        
assign      	0t34        	_           	f           
assign      	true        	_           	q           
not         	flag        	_           	0t35        
not         	q           	_           	0t36        
and         	0t35        	0t36        	0t37        
ge          	i           	j           	0t38        
or          	0t37        	0t38        	0t39        
assign      	0t39        	_           	flag        
add         	s           	t           	0t40        
assign      	0t40        	_           	s           
push        	i           	_           	_           
push        	j           	_           	_           
jmp         	_           	_           	func_add    
return      	_           	_           	@ret        
